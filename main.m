
fun = @(x) ((x - tn_tr(1)).^2 )* wblpdf(x, lambda(1), k(1))
var = integral(@(x) (x - tn_tr(1)).^2 .* wblpdf(x, lambda(1), k(1))/(B(1) - A(1)), 0, 10000) * (B(1) - A(1))^2


%% histogram plots
figure(5) 
subplot(1,2,1)
hist(sample, 1000)
title('Histogram samples from f(v), december')
subplot(1,2,2)
hist(f_sample, 1000)
title('Histogram samples from f(v) conditioned on the interval I = (3,25),  december')
%% 2b) Create confidence interval using random samples generated by
% importance sampling
close all
u1 = linspace(3,25,N)
u2 = linspace(0,27,N) 

% tuning parameters
a = 6 % 2.99, b = 2 passar för f(x). a = 8, b = 1.6 passar phi(x) * f(x). 
b = 1.6  % 2.7, b = 3.2 bra åas   a = 8, b = 1.6
%%

ratio_f = zeros(N,12);
ratio_phif = zeros(N,12);
tic;
for i = 1:length(k)
    pdff = @(v) wblpdf(v, lambda(i), k(i)) % f(v)
    % TODO
    % välja parameterar så att en gammafunktion passar phi(x)f(x)
    % 
    % sedan välj en 
    pdfg = @(x,a,b) gampdf(x,a, b)
    % our instrumental pdf
    % 
    ratio_f(:,i) = pdff(u1)./pdfg(u1, a, b);
    ratio_phif(:,i) = P(u1) .* ratio_f(:,i);
    
    omega = @(x, par) pdff(x) ./ pdfg(x, par(1), par(2))
    sample = gamrnd(a,b, N,1); % generade sample from our chosen distribution g
    tn_IS = mean(P(sample).*omega(sample, [a,b])) % mean of phi(x)*w(x)
    s_IS(i) = std(P(sample).*omega(sample, [a,b]))  % mindre än de tidigare, men osäker på 
    % om jag gjort rätt
    CI_IS(i,:) = [tn_IS - kvantil*s_IS(i)/sqrt(N) , tn_IS + kvantil* s_IS(i)/sqrt(N)] %
end
%%
%temp = @(u1, par) norm(diff(omega(, par))/h)

par = [3 4]
par = fminsearch(temp, [0, par])




%%
toc;
figure(3);
subplot(1,2,1)
plot(u1, ratio_f(:,:));
title('ratio f(x)/g(x)');
subplot(1,2,2)
plot(u1, ratio_phif(:,:));
title('ratio phi(x) * (f(x)/g(x))')

% importance sampling

%%
figure(8)
hold on
plot(u1, 0.5e-6*P(u1).*pdff(u1)')
plot(u1, pdff(u1)')
plot(u2, pdfg(u2,a,b,c))
%%
figure(10)
ratio2 = pdff(u1)./pdf2(u1,a,b,c);
ratio1 = (P(u1).*((pdff(u1)'./pdf2(u1,a,b,c)'))) % we want this ratio to be as constant as
% possible
subplot(1,2,1)
plot(u1,ratio1)
title('Ratio \phi(x)*(f(x)/g(x))')
subplot(1,2,2)
plot(u1,ratio2);
title('Ratio (f(x)/g(x))')
%% importance sampling
omega = @(x) pdff(x) ./ pdf2(x, a, b,c)

%%
sample = gamrnd(dec(1),dec(2), N,1); % generade sample from our chosen distribution g
tn_IS = mean(P(sample).*omega(sample, dec)) % mean of phi(x)*w(x)
s_IS = std(P(sample).*omega(sample, dec))  % mindre än de tidigare, men osäker på 
% om jag gjort rätt
CI_IS = [tn_IS - kvantil*s_IS/sqrt(N) , tn_IS + kvantil* s_IS/sqrt(N)] %


%% hmm
close all
h = 0.1; x = 0:h:27;
%fun = @(par) norm(diff((P(u1).*(pdf1(u1)'./(gampdf(x, par(1), par(2))./gamcdf(x, par(1), par(2))))/h);

% vill vi att relative skillnad ska vara i ordning 10^6 eller nära 1?

%pars = fminsearch(fun, [1e2,3,4])

%g = @(x) gampdf(x, pars(1), pars(2)) ./ gamcdf(x, pars(1), pars(2))
%%
figure(1)
plot(u2, g(u2))

figure(8)
hold on
plot(u1, P(u1).*pdff(u1)')
plot(u1, g(u1))

hold off
figure(9)
ratio = pdff(u1)./g(u1)
plot(u1,ratio)
title('Ratio f(x)/g(x)')

%%
hold off
clear all
h = 0.01;
x = [3:h:25]

s = @(x) sin(x)
c = @(x) cos(x)

[par1, par2] = diff(s(x))/h % approx to -cos(x)

figure(4)
plot(x, s(x))
hold on
plot(x(1:end-1), ds)
plot(x, c(x))
plot(x(1:end-1), ds)



